{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldealmeida/Programming/learning/blockchain/ethereum/faucet/react-token-faucet/src/components/TokenSend.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tokenAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\n\nconst TokenSend = props => {\n  _s();\n\n  const [userAccount, setUserAccount] = useState();\n  const [amount, setAmount] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, signer);\n      const transation = await contract.transfer(userAccount, amount);\n      await transation.wait();\n      console.log(`${amount} Coins successfully sent to ${userAccount}`);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      background: \"rgba(227, 104, 222, 0.71)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        children: \" send faucet to an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setUserAccount(e.target.value),\n          placeholder: \"Payee 0x address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendCoins,\n          variant: \"success\",\n          children: \"send \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TokenSend, \"WsP6R8Z3azCxJ/Uyd4j+sxkI8BE=\");\n\n_c = TokenSend;\nexport default TokenSend;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenSend\");","map":{"version":3,"sources":["/Users/gabrieldealmeida/Programming/learning/blockchain/ethereum/faucet/react-token-faucet/src/components/TokenSend.js"],"names":["useState","ethers","Card","Button","tokenAddress","TokenSend","props","userAccount","setUserAccount","amount","setAmount","requestAccount","window","ethereum","request","method","sendCoins","provider","providers","Web3Provider","signer","getSigner","contract","Contract","tokenContract","abi","transation","transfer","wait","console","log","background","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,YAAY,GAAG,4CAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC,CAH2B,CAK3B;;AACA,iBAAeW,cAAf,GAAgC;AAC9B,UAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AACD;;AAED,iBAAeC,SAAf,GAA2B;AAC3B,QAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMF,cAAc,EAApB;AACA,YAAMM,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMO,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMC,QAAQ,GAAG,IAAIrB,MAAM,CAACsB,QAAX,CAAoBnB,YAApB,EAAkCE,KAAK,CAACkB,aAAN,CAAoBC,GAAtD,EAA2DL,MAA3D,CAAjB;AACA,YAAMM,UAAU,GAAG,MAAMJ,QAAQ,CAACK,QAAT,CAAkBpB,WAAlB,EAA+BE,MAA/B,CAAzB;AACA,YAAMiB,UAAU,CAACE,IAAX,EAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAErB,MAAO,+BAA8BF,WAAY,EAAhE;AACD;AACF;;AACG,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACwB,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA,2BACA,QAAC,IAAD,CAAM,IAAN;AAAA,8BACA,QAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAO,UAAA,QAAQ,EAAEC,CAAC,IAAIxB,cAAc,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;AAAsD,UAAA,WAAW,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,QAAQ,EAAEF,CAAC,IAAItB,SAAS,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;AAAiD,UAAA,WAAW,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAElB,SAAjB;AAA4B,UAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCD;;GAAMX,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport { ethers } from 'ethers'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nconst tokenAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\"\n\nconst TokenSend = (props) => {\n\n  const [userAccount, setUserAccount] = useState()\n  const [amount, setAmount] = useState()\n\n  // request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  async function sendCoins() {\n  if (typeof window.ethereum !== 'undefined') {\n    await requestAccount()\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, signer);\n    const transation = await contract.transfer(userAccount, amount);\n    await transation.wait();\n    console.log(`${amount} Coins successfully sent to ${userAccount}`);\n  }\n}\n    return (\n        <Card style={{background: \"rgba(227, 104, 222, 0.71)\"}}>\n        <Card.Body>\n        <Card.Subtitle> send faucet to an address\n        </Card.Subtitle>\n        <br></br>\n        <div className=\"d-grid gap-2\">\n        <input onChange={e => setUserAccount(e.target.value)} placeholder=\"Payee 0x address\" />\n        <input onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" />\n        <Button onClick={sendCoins} variant=\"success\">send </Button>\n        </div>\n        </Card.Body>\n        </Card>\n    )\n}\n\nexport default TokenSend\n"]},"metadata":{},"sourceType":"module"}